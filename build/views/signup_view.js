// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.SignupView = (function(_super) {
    var complete_registration, save_user;

    __extends(SignupView, _super);

    function SignupView() {
      return SignupView.__super__.constructor.apply(this, arguments);
    }

    SignupView.prototype.tagName = 'div';

    SignupView.prototype.className = 'sign_up form-group';

    SignupView.prototype.events = {
      'click #google_sign_in': 'register'
    };

    SignupView.prototype.initialize = function(attributes) {
      this.call_back = attributes;
      return console.log("signup view initialized");
    };

    SignupView.prototype.register = function(event) {
      event.preventDefault();
      this.$("#google_sign_in").hide();
      this.$("#sign_in_wrapper").css("background-image", "url(../../images/loadinfo_net.gif)");
      $(this.$el).off("click", "#google_sign_in");
      return chrome.pushMessaging.getChannelId(false, complete_registration);
    };

    complete_registration = function(google_chrome_channel_id) {
      console.log("complete_registration");
      return chrome.identity.getAuthToken({
        'interactive': true
      }, function(token) {
        return save_user(token, google_chrome_channel_id.channelId);
      });
    };

    SignupView.prototype.render = function() {
      this.$el.html(HAML['signup']());
      return this;
    };

    save_user = function(token, google_chrome_channel_id) {
      var new_user, show_message;
      new_user = new User({
        channel_id: google_chrome_channel_id,
        oauth_token: token
      });
      new_user.save({}, {
        success: function(model) {
          var user_attributes;
          if (model.get("status") === "success") {
            user_attributes = model.get("user");
            new_user.set_attributes(user_attributes);
            window.logged_in_user = new_user;
            window.setProfileAttributes(window.logged_in_user.picture, window.logged_in_user.name);
            show_message("Registered successfully");
            chrome.storage.local.set({
              "registered": true,
              "registered_user": window.logged_in_user
            }, null);
            $("#sign_up_view_modal").modal('hide');
            return window.loadRelaters(window.logged_in_user.id);
          } else if (model.get("status") === "failure") {
            this.$("#google_sign_in").show();
            this.$("#sign_in_wrapper").css("background-image", " ");
            show_message("For some reasons registration failed.Please try again later");
            return chrome.storage.local.set({
              "registered": false,
              "registered_user": null
            }, null);
          } else {
            this.$("#google_sign_in").show();
            this.$("#sign_in_wrapper").css("background-image", " ");
            show_message(model.get("status"));
            return chrome.storage.local.set({
              "registered": false,
              "registered_user": null
            }, null);
          }
        },
        error: function() {
          this.$("#google_sign_in").show();
          this.$("#sign_in_wrapper").css("background-image", " ");
          return $(".status").html("For some reasons registration failed.Please try again later");
        }
      });
      return show_message = function(message) {
        this.$("#registration_status").html(message);
        return this.$("#registration_status").show();
      };
    };

    return SignupView;

  })(Backbone.View);

}).call(this);
