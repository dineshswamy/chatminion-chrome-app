// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.RelaterCollection = (function(_super) {

    __extends(RelaterCollection, _super);

    function RelaterCollection() {
      return RelaterCollection.__super__.constructor.apply(this, arguments);
    }

    RelaterCollection.prototype.model = User;

    RelaterCollection.prototype.url = chrome.extension.getBackgroundPage().base_url;

    RelaterCollection.prototype.initialize = function(attributes) {
      return this.url = chrome.extension.getBackgroundPage().base_url + "/user/" + attributes.user_id + "/contacts";
    };

    return RelaterCollection;

  })(Backbone.Collection);

  this.RelaterView = (function(_super) {

    __extends(RelaterView, _super);

    function RelaterView() {
      return RelaterView.__super__.constructor.apply(this, arguments);
    }

    RelaterView.prototype.tagName = 'li';

    RelaterView.prototype.className = 'available_contact';

    RelaterView.prototype.events = {
      'click li.available_contact': ''
    };

    RelaterView.prototype.initialize = function(attributes) {};

    RelaterView.prototype.render = function() {
      this.$el.html(HAML["relater"]({
        user_model: this.model
      }));
      return this;
    };

    return RelaterView;

  })(Backbone.View);

  this.RelatersCollectionView = (function(_super) {

    __extends(RelatersCollectionView, _super);

    function RelatersCollectionView() {
      return RelatersCollectionView.__super__.constructor.apply(this, arguments);
    }

    RelatersCollectionView.prototype.tagName = 'ul';

    RelatersCollectionView.prototype.className = 'friends_contacts_container';

    RelatersCollectionView.prototype.render = function() {
      var relater, users_model, _i, _len, _ref;
      _ref = this.collection.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        users_model = _ref[_i];
        relater = new RelaterView({
          "model": users_model
        });
        this.$el.append(relater.render().$el);
      }
      return this;
    };

    return RelatersCollectionView;

  })(Backbone.View);

}).call(this);
