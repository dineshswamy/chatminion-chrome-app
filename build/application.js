// Generated by CoffeeScript 1.6.1
(function() {
  'use-strict';
  var add_new_relater_and_render, callback_check_and_addRelator, check_and_addRelator, initialize_extension, loadRelators, openGmailForRequest,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ContactsViewContainer = (function(_super) {

    __extends(ContactsViewContainer, _super);

    function ContactsViewContainer() {
      return ContactsViewContainer.__super__.constructor.apply(this, arguments);
    }

    ContactsViewContainer.prototype.events = {
      "click button#submit_new_contact": "addcontact"
    };

    ContactsViewContainer.prototype.render = function() {
      this.$el.html(HAML["contacts_view"]);
      return this;
    };

    ContactsViewContainer.prototype.addcontact = function(event) {
      var new_contact_email;
      event.preventDefault();
      new_contact_email = $("#new_contact_email").val();
      return check_and_addRelator(new_contact_email);
    };

    return ContactsViewContainer;

  })(Backbone.View);

  this.InfoView = (function(_super) {

    __extends(InfoView, _super);

    function InfoView() {
      return InfoView.__super__.constructor.apply(this, arguments);
    }

    InfoView.prototype.render = function(message) {
      this.$el.html(HAML["info_view"]({
        "info": message
      }));
      return this;
    };

    return InfoView;

  })(Backbone.View);

  loadRelators = function(user_id) {
    var contacts_view, messages;
    contacts_view = new ContactsViewContainer();
    $(".container").html(contacts_view.render().$el);
    window.relater_collection = new RelaterCollection({
      "user_id": user_id
    });
    window.relater_collection.fetch({
      success: function() {
        var relater_collection_view;
        console.log("Models length " + window.relater_collection.models.length);
        if (window.relater_collection.models.length > 0) {
          relater_collection_view = new RelatersCollectionView({
            "collection": window.relater_collection
          });
          return $("#contacts_container").html(relater_collection_view.render().el);
        } else {
          return $("#contacts_container").html(new InfoView().render("You have no contacts!").$el);
        }
      }
    });
    messages = new Messages();
    return messages.init();
  };

  check_and_addRelator = function(add_relater) {
    var data, url;
    data = {
      relater_email: add_relater,
      user_id: window.logged_in_user.id
    };
    url = chrome.extension.getBackgroundPage().base_url + "/calltheteam/addcontact";
    return $.post(url, data, callback_check_and_addRelator);
  };

  callback_check_and_addRelator = function(response_json) {
    var new_relater;
    console.log(response_json.status);
    new_relater = {
      "id": response_json.new_relater.id,
      "name": response_json.new_relater.name,
      "channel_id": response_json.new_relater.channel_id
    };
    switch (response_json.status) {
      case response_json.status === "success":
        return add_new_relater_and_render(new_relater);
      case response_json.status === "user_not_registered":
        return openGmailForRequest();
    }
  };

  add_new_relater_and_render = function(relater) {
    var relater_collection_view;
    window.relater_collection.add(new_relater);
    console.log("adding the new relater");
    relater_collection_view = new RelatersCollectionView({
      "collection": window.relater_collection
    });
    return $("#contacts_container").html(relater_collection_view.render().el);
  };

  openGmailForRequest = function() {};

  initialize_extension = function() {
    return chrome.storage.local.get(["registered", "registered_user"], function(result) {
      var sign_up_view;
      if (result.registered === void 0 || result.registered_user === void 0) {
        sign_up_view = new SignupView(loadRelators);
        return $(".container").html(sign_up_view.render().$el);
      } else {
        window.logged_in_user = result.registered_user;
        return loadRelators(result.registered_user.id);
      }
    });
  };

  document.addEventListener("DOMContentLoaded", initialize_extension);

}).call(this);
