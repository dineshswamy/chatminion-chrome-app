// Generated by CoffeeScript 1.6.1
(function() {
  var sendVideoStreampermission, sender, sender_message, show_or_hide_video_stream, success_relater_stream, success_stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  -'use-strict';

  window.base_url = "http://lit-refuge-2289.herokuapp.com";

  window.relater_send_queue = [];

  window.message_to_send = null;

  window.relater_collection = null;

  sender = null;

  window.logged_in_user = null;

  sender_message = null;

  window.messages = null;

  window.transformed_message = null;

  window.popup_window_opened = false;

  window.is_custom_message = false;

  window.custom_message = "";

  window.messages_with_options = null;

  window.bool = true;

  window.peer_js_selected_relater = null;

  window.incoming_message = false;

  this.InfoView = (function(_super) {

    __extends(InfoView, _super);

    function InfoView() {
      return InfoView.__super__.constructor.apply(this, arguments);
    }

    InfoView.prototype.render = function(message) {
      this.$el.html(HAML["info_view"]({
        "info": message
      }));
      return this;
    };

    return InfoView;

  })(Backbone.View);

  window.loadViews = function() {
    var add_relaters_view, relater_bot;
    chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {
      return window.dissectRecievedMessage(message);
    });
    $("#start_call").click(function(event) {
      event.preventDefault();
      return window.launchVideoCall(relater);
    });
    $("#logout_btn").click(function(event) {
      event.preventDefault();
      window.logOutUser();
      return $(this).removeClass("glyphicon-log-out").addClass("glyphicon glyphicon-log-in");
    });
    add_relaters_view = new addRelatersView();
    window.relater_collection_view = new RelatersCollectionView({
      "collection": window.relater_collection
    });
    if (window.relater_collection.models.length > 0) {
      $("#relaters_of_the_user").html(window.relater_collection_view.render().el);
    } else {
      relater_bot = new User({
        "id": 90009,
        "channel_id": window.logged_in_user.channel_id,
        "name": "Chatminion"
      });
      window.relater_collection.models.push(relater_bot);
      $("#relaters_of_the_user").html(window.relater_collection_view.render().el);
      $("#relaters_of_the_user").append(new InfoView().render("You have no contacts!").$el);
    }
    $("#relaters_of_the_user").prepend(add_relaters_view.render().$el);
    $("#video_call_btn").click(launchVideoCall);
    $("#video_call_stop_btn").click(stopVideoCall);
    $("#all_messages_btn").click(function(event) {
      event.preventDefault();
      return flipMessageCards(false);
    });
    $("#relaters_of_the_user").jScrollPane();
    chrome.runtime.getBackgroundPage(function(page) {
      if (page.window.background_message_recieved !== null) {
        window.dissectRecievedMessage(page.window.background_message_recieved);
        return page.window.background_message_recieved = null;
      }
    });
    return initializeValues();
  };

  success_stream = function(remoteStream) {
    var video_call_view;
    $(".transparent-background").hide(500);
    video_call_view = new VideoCallView();
    $(".video_call_container").html(video_call_view.render().$el);
    $("#chat_video").attr("src", window.URL.createObjectURL(remoteStream));
    return $(".video_call_container").show();
  };

  success_relater_stream = function(remoteStream) {
    console.log("success relater stream");
    return $("#chat_video_relater").attr("src", window.URL.createObjectURL(remoteStream));
  };

  window.stopVideoCall = function() {
    event.preventDefault();
    if (window.call !== null || window.call !== void 0) {
      window.call.close();
    }
    $(".video_call_container").hide(500);
    $(".transparent-background").show(500);
    return $(".video_call_container").html("");
  };

  window.getPeerJSId = function(id) {
    var date;
    date = new Date();
    return date.getMonth() + "_" + date.getYear() + "_" + date.getDay() + "_" + id + "_peervendor" + "_" + date.getHours();
  };

  window.launchVideoCall = function(event) {
    var relater_peer_js_id;
    event.preventDefault();
    console.log("Trying to launch video");
    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
    relater_peer_js_id = window.getPeerJSId(window.peer_js_selected_relater.id);
    console.log(relater_peer_js_id);
    return navigator.getUserMedia({
      video: true,
      audio: true
    }, function(stream) {
      return window.call = window.peer.call(relater_peer_js_id, stream);
    }, window.call.on('stream', success_stream), function(err) {
      return console.log('Failed to get local stream', err);
    });
  };

  window.peerJSInit = function() {
    window.peer_js_id = window.getPeerJSId(window.logged_in_user.id);
    window.peer = new Peer(window.peer_js_id, {
      key: '2n9conp4vga2a9k9'
    });
    window.peer.on('call', function(call) {
      console.log("You have a video call");
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
      return navigator.getUserMedia({
        video: true,
        audio: true
      }, function(stream) {
        call.answer(stream);
        return call.on('stream', success_stream);
      }, function(err) {
        return console.log('Failed to get local stream', err);
      });
    });
    window.peer.on('close', function() {
      return console.log("connection closed");
    });
    return window.peer.on('error', function(error) {
      return console.log("error type" + error.type);
    });
  };

  show_or_hide_video_stream = function(data) {
    console.log("data");
    console.log(data);
    if (data === null || data === void 0 || data === "no_video_stream") {
      return $("#chat_video_relater").hide();
    } else if (data === "yes_video_stream") {
      return $("#chat_video_relater").show();
    }
  };

  window.dissectRecievedMessage = function(message) {
    var messages_collection, options_for_message, payload, recieved_message;
    recieved_message = message.recieved_message;
    if (window.relater_collection !== null) {
      payload = JSON.parse(recieved_message.payload);
      console.log(payload);
      sender = window.relater_collection.findWhere({
        "id": Number(payload.user_id)
      });
      window.peer_js_selected_relater = sender;
      window.incoming_message = true;
      $("a[data-relater-id='" + sender.id + "']").trigger("click");
      if (payload.is_custom_message === "false") {
        return window.messages.getMessageInfo(Number(payload.message_id), function(payload_message) {
          return window.messages.loadOptionsforMessage(Number(payload.message_id), function(options_for_message) {
            var messages_collection;
            messages_collection = new MessageCollection(options_for_message);
            if (payload.expect_reply === "true") {
              window.openMessages(messages_collection, true);
            }
            return window.getTransformedMessage(sender, window.logged_in_user.name, payload_message.user_message, payload_message.transform_pattern, payload.message_id, payload.time, payload.read_out);
          });
        });
      } else {
        options_for_message = [];
        messages_collection = new MessageCollection(options_for_message);
        window.getTransformedMessage(sender, window.logged_in_user.name, payload.custom_message, payload.custom_message, null, payload.time, payload.read_out);
        if (payload.expect_reply === "true") {
          return window.openMessages(messages_collection, true);
        }
      }
    }
  };

  window.loadRelaters = function(user_id) {
    var key;
    key = "fetched_relaters_key";
    return chrome.storage.local.get(key, function(result) {
      window.relater_collection = new RelaterCollection({
        "user_id": window.logged_in_user.id
      });
      return window.relater_collection.fetch({
        success: function() {
          window.loadViews();
          window.cacheRelaterCollection();
          return console.log("relaters retrieved");
        },
        error: function() {
          return console.log("relaters retrieval error");
        }
      });
    });
  };

  sendVideoStreampermission = function(data_to_send) {
    var conn, relater_peer_js_id;
    relater_peer_js_id = "video_call_124";
    conn = window.peer.connect(relater_peer_js_id);
    return conn.on('open', function() {
      return conn.send(relater_peer_js_id);
    });
  };

  window.initialize_extension = function(call_back) {
    $("#option_messages").hide();
    window.messages = new Messages();
    window.messages.init(function() {
      return chrome.runtime.getBackgroundPage(function(page) {
        if (page.window.background_message_recieved === null) {
          return window.openMessages(window.messages_with_options, true);
        }
      });
    });
    return chrome.storage.local.get(["registered", "registered_user"], function(result) {
      var sign_up_view;
      if (result.registered === void 0 || result.registered_user === void 0 || result.registered === false || result.registered_user === null) {
        sign_up_view = new SignupView(window.loadRelaters);
        $("#sign_up_view").html(sign_up_view.render().$el);
        $("#sign_up_view_modal").modal({
          keyboard: false
        });
        return $("#sign_up_view_modal").modal('show');
      } else {
        window.logged_in_user = result.registered_user;
        window.setProfileAttributes(window.logged_in_user.picture, window.logged_in_user.name);
        return window.loadRelaters(window.logged_in_user.id);
      }
    });
  };

  window.getTransformedMessage = function(sender, reciever_name, user_message, transform_pattern, message_id, time, read_out) {
    var helper_transformed_message, message_transform_helper, thread_params;
    message_transform_helper = new MessageTransformation();
    message_transform_helper.init(transform_pattern, sender.name, reciever_name);
    if (message_id !== null) {
      message_transform_helper.applyTransformation();
      helper_transformed_message = message_transform_helper.getMessage();
      thread_params = {
        relater: sender,
        is_custom_message: false,
        transformed_message: helper_transformed_message,
        message_id: message_id,
        sent_by_relater: true,
        msg_time: time
      };
    } else {
      message_transform_helper.pattern = null;
      message_transform_helper.setCustomMessage(transform_pattern);
      message_transform_helper.applyTransformation();
      helper_transformed_message = message_transform_helper.getMessage();
      thread_params = {
        "relater": sender,
        "is_custom_message": true,
        "transformed_message": user_message,
        "message_id": message_id,
        "sent_by_relater": true,
        "msg_time": time
      };
    }
    if (read_out === "true") {
      window.speakMessage(helper_transformed_message);
    }
    return window.putMessageinThread(thread_params);
  };

  window.initializeValues = function() {
    window.user_to_send = null;
    window.message_to_send = null;
    window.transformed_message = null;
    window.is_custom_message = false;
    window.custom_message = "";
    return window.options_for_message = [];
  };

  window.flipMessageCards = function(show_options_messages) {
    if (show_options_messages) {
      $("#messages").hide();
      $("#messages").empty();
      return $("#option_messages").show();
    } else {
      $("#option_messages").hide();
      $("#option_messages").empty();
      return $("#messages").show();
    }
  };

  window.setMessageOptions = function(sender_window, sender) {
    window.broadcast_message = {
      "relater_id": window.logged_in_user.id,
      "relater_to_send": sender.toJSON(),
      "transformed_message": window.transformed_message
    };
    return window.sendBroadcastMessage();
  };

  window.sendMessage = function() {
    var custom_message, data, expect_reply, is_custom_message, message, read_out, relater_to_send, thread_params, time;
    is_custom_message = !$("#custom_message").prop("disabled");
    custom_message = $("#custom_message").val();
    relater_to_send = window.peer_js_selected_relater;
    message = window.message_to_send;
    time = String(new Date());
    expect_reply = $("#expect_reply").prop("checked");
    read_out = $("#read_out").prop("checked");
    data = {
      "sender_id": window.logged_in_user.id,
      "channel_id": relater_to_send.channel_id,
      "is_custom_message": is_custom_message,
      "custom_message": custom_message,
      "expect_reply": expect_reply,
      "read_out": read_out,
      "time": time
    };
    if (relater_to_send.id === 90009) {
      data["bot_message"] = true;
    }
    if (!is_custom_message) {
      data["message_id"] = message.get("id");
      thread_params = {
        "relater": relater_to_send,
        "transformed_message": message.get("user_message"),
        "message_id": message.get("id"),
        "sent_by_relater": false,
        "is_custom_message": false,
        "msg_time": time
      };
    } else {
      thread_params = {
        "relater": relater_to_send,
        "transformed_message": custom_message,
        "message_id": -970,
        "sent_by_relater": false,
        "is_custom_message": true,
        "msg_time": time
      };
      data["message_id"] = " ";
    }
    console.log("threads");
    console.log(thread_params);
    window.putMessageinThread(thread_params);
    window.animateMessagesForSending(true);
    return $.post(base_url + "/calltheteam/sendmessage", data, function() {
      return console.log("complete");
    });
  };

  window.putMessageinThread = function(thread_params) {
    var new_thread, relater_thread_key;
    new_thread = new Thread(thread_params);
    relater_thread_key = String("thread_" + String(thread_params["relater"].id));
    return chrome.storage.local.get(relater_thread_key, function(result) {
      var thread, thread_message_view, transformed_message;
      thread = result[relater_thread_key];
      if (thread === null || thread === void 0 || thread.length > 2) {
        thread = [];
      }
      if (!new_thread.sent_by_relater) {
        $("#transformed_message").fadeOut(500);
        $("#thread_messages").fadeOut(500);
        thread.push(new_thread);
        result[relater_thread_key] = thread;
        thread_message_view = new ThreadMessageView({
          collection: thread
        });
        $("#thread_messages").html(thread_message_view.render().$el);
        $("abbr.timeago").timeago();
        $("#thread_messages").fadeIn(500);
      } else {
        thread_message_view = new ThreadMessageView({
          collection: thread
        });
        $("#thread_messages").html(thread_message_view.render().$el);
        $("abbr.timeago").timeago();
        if (new_thread.is_custom_message) {
          transformed_message = new_thread.relater.name + " says " + new_thread.transformed_message;
        } else {
          transformed_message = new_thread.transformed_message;
        }
        $("#transformed_message").html(transformed_message);
        thread.push(new_thread);
        result[relater_thread_key] = thread;
      }
      return chrome.storage.local.set(result, function() {
        return console.log("thread message saved");
      });
    });
  };

  window.openMessages = function(message_collection, is_option_message) {
    var messages_collection_view;
    messages_collection_view = new MessageCollectionView({
      "collection": message_collection
    });
    if (is_option_message) {
      $("#option_messages").html(messages_collection_view.render().$el);
    } else {
      $("#messages").html(messages_collection_view.render().$el);
    }
    flipMessageCards(is_option_message);
    return animateMessages();
  };

  window.loadMessagesofRelater = function(relater_id) {
    var relater_thread_key, thread;
    relater_thread_key = String("thread_" + String(relater_id));
    thread = null;
    return chrome.storage.local.get(relater_thread_key, function(result) {
      var thread_message_view;
      thread = result[relater_thread_key];
      if (thread !== null && thread !== void 0) {
        console.log(thread);
        thread_message_view = new ThreadMessageView({
          collection: thread
        });
        $("#thread_messages").html(thread_message_view.render().$el);
        $("abbr.timeago").timeago();
        if (!window.incoming_message) {
          setMessageOptionsFromThread(thread[thread.length - 1]);
        }
        return window.incoming_message = false;
      }
    });
  };

  window.logOutUser = function() {
    var key, sign_up_view;
    window.removeProfileAttributes();
    sign_up_view = new SignupView(window.loadRelaters);
    chrome.identity.getAuthToken({
      'interactive': true
    }, function(token) {
      return chrome.identity.removeCachedAuthToken({
        "token": token
      }, function() {});
    });
    chrome.storage.local.set({
      "registered": false,
      "registered_user": null
    }, null);
    key = "fetched_relaters_key";
    chrome.storage.local.set({
      key: null
    }, null);
    $("#sign_up_view").html(sign_up_view.render().$el);
    $("#sign_up_view_modal").modal({
      keyboard: false
    });
    return $("#sign_up_view_modal").modal('show');
  };

  window.setMessageOptionsFromThread = function(last_thread_message) {
    return openMessages(window.messages_with_options, false);
  };

  window.setProfileAttributes = function(profile_picture, profile_name) {
    var xhr;
    $("#profile_name").html("<h2>" + profile_name + "</h2>");
    xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      var img, url;
      if (this.readyState === 4 && this.status === 200) {
        img = document.createElement('img');
        url = window.URL || window.webkitURL;
        img.src = url.createObjectURL(this.response);
        return $("#profile_image_container").html(img);
      }
    };
    xhr.open('GET', profile_picture);
    xhr.responseType = 'blob';
    return xhr.send();
  };

  window.removeProfileAttributes = function() {
    $("#profile_name").html("");
    return $("#profile_image_container").html("");
  };

  window.animateMessagesForSending = function(send_status) {
    if (send_status) {
      if ($("#option_messages").is(':visible')) {
        $("#option_messages").animate({
          bottom: -320
        }, {
          duration: 'fast',
          easing: 'easeOutBack'
        });
        $("#option_messages").html("Sending ...");
        return $("#option_messages").animate({
          bottom: 0
        }, {
          duration: 'fast',
          easing: 'easeOutBack'
        });
      } else if ($("#messages").is(':visible')) {
        $("#messages").animate({
          bottom: -320
        }, {
          duration: 'fast',
          easing: 'easeOutBack'
        });
        $("#messages").html("Sending ...");
        return $("#messages").animate({
          bottom: 0
        }, {
          duration: 'fast',
          easing: 'easeOutBack'
        });
      }
    } else {
      return window.openMessages(window.messages_with_options, false);
    }
  };

  window.animateMessages = function() {
    if ($("#option_messages").is(':visible')) {
      return $("#option_messages").animate({
        bottom: -320
      }, {
        duration: 'fast',
        easing: 'easeOutBack'
      }).animate({
        bottom: 0
      }, {
        duration: 'fast',
        easing: 'easeOutBack'
      });
    } else if ($("#messages").is(':visible')) {
      return $("#messages").animate({
        bottom: -320
      }, {
        duration: 'fast',
        easing: 'easeOutBack'
      }).animate({
        bottom: 0
      }, {
        duration: 'fast',
        easing: 'easeOutBack'
      });
    }
  };

  window.addRelaterToCollection = function(relater) {
    window.relater_collection.add(relater);
    return window.cacheRelaterCollection();
  };

  window.cacheRelaterCollection = function() {
    var key;
    key = "fetched_relaters_key";
    return chrome.storage.local.set({
      "fetched_relaters_key": window.relater_collection
    }, function() {
      return console.log("relaters cached");
    });
  };

  window.getRelaterThread = function(sender_id) {
    return window.relater_threads[sender_id];
  };

  window.speakMessage = function(transformed_message) {
    return chrome.tts.speak(String(transformed_message));
  };

  document.addEventListener("DOMContentLoaded", initialize_extension);

}).call(this);
