// Generated by CoffeeScript 1.6.1
(function() {
  'use-strict';
  var callback_check_and_addRelator, check_and_addRelator, initialize_extension, loadRelators,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ContactsView = (function(_super) {

    __extends(ContactsView, _super);

    function ContactsView() {
      return ContactsView.__super__.constructor.apply(this, arguments);
    }

    ContactsView.prototype.events = {
      "click #submit_new_contact": "addContact"
    };

    return ContactsView;

  })(Backbone.View);

  ({
    render: function() {
      this.$el.html(HAML["contacts_view"]);
      return this({
        addcontact: function() {
          var new_contact_email;
          new_contact_email = $("#new_contact_email").val();
          return check_and_addRelator(new_contact_email);
        }
      });
    }
  });

  loadRelators = function(user_id) {
    var contacts_message_view, messages, relater_collection;
    contacts_message_view = new ContactsView();
    $(".container").html(contacts_message_view.render().$el);
    relater_collection = new RelaterCollection({
      "user_id": user_id
    });
    relater_collection.fetch({
      success: function() {
        var relater_collection_view;
        relater_collection_view = new RelatersCollectionView({
          "collection": relater_collection
        });
        return $("#contacts_container").html(relater_collection_view.render().el);
      }
    });
    messages = new Messages();
    return messages.init();
  };

  check_and_addRelator = function(add_relator_id) {
    var data, url;
    data = {
      relator_id: add_relator_id
    };
    url = chrome.extension.getBackgroundPage().base_url + "/calltheteam/addcontact";
    return $.post(url, data, callback_check_and_addRelator);
  };

  callback_check_and_addRelator = function(response_data) {};

  initialize_extension = function() {
    return chrome.storage.local.get(["registered", "registered_user_id"], function(result) {
      var sign_up_view;
      console.log(result);
      if (result.registered === void 0 && result.registered_user_id === void 0) {
        sign_up_view = new SignupView(loadRelators);
        return $(".container").html(sign_up_view.render().$el);
      } else {
        console.log("registered id" + result.registered_user_id);
        return loadRelators(result.registered_user_id);
      }
    });
  };

  document.addEventListener("DOMContentLoaded", initialize_extension);

}).call(this);
