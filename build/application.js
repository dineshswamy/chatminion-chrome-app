// Generated by CoffeeScript 1.6.1
(function() {
  var loadRelaters, sendVideoStreampermission, sender, sender_message, show_or_hide_video_stream, success_relater_stream, success_stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  -'use-strict';

  window.base_url = "http://192.168.1.25:3000";

  window.relater_send_queue = [];

  window.message_to_send = null;

  window.relater_collection = null;

  sender = null;

  window.logged_in_user = null;

  sender_message = null;

  window.messages = null;

  window.transformed_message = null;

  window.popup_window_opened = false;

  window.is_custom_message = false;

  window.custom_message = "";

  window.messages_with_options = null;

  window.bool = true;

  window.peer_js_selected_relater = null;

  this.InfoView = (function(_super) {

    __extends(InfoView, _super);

    function InfoView() {
      return InfoView.__super__.constructor.apply(this, arguments);
    }

    InfoView.prototype.render = function(message) {
      this.$el.html(HAML["info_view"]({
        "info": message
      }));
      return this;
    };

    return InfoView;

  })(Backbone.View);

  window.loadViews = function() {
    var add_relaters_view;
    peerJSInit();
    chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {
      return window.dissectRecievedMessage(message);
    });
    $("#start_call").click(function(event) {
      event.preventDefault();
      return window.launchVideoCall(relater);
    });
    add_relaters_view = new addRelatersView();
    window.relater_collection_view = new RelatersCollectionView({
      "collection": window.relater_collection
    });
    if (window.relater_collection.models.length > 0) {
      $("#relaters_of_the_user").html(window.relater_collection_view.render().el);
    } else {
      $("#relaters_of_the_user").html(new InfoView().render("You have no contacts!").$el);
    }
    $("#relaters_of_the_user").prepend(add_relaters_view.render().$el);
    window.messages = new Messages();
    window.messages.init(function() {
      var message_collection_view;
      message_collection_view = new MessageCollectionView({
        "collection": window.messages_with_options
      });
      return $("#messages").html(message_collection_view.render().$el);
    });
    $("#video_call_btn").click(launchVideoCall);
    $("#video_call_stop_btn").click(stopVideoCall);
    $("#all_messages_btn").click(function(event) {
      event.preventDefault();
      console.log("messages btn pressed");
      return flipMessageCards(false);
    });
    $("#relaters_of_the_user").jScrollPane();
    return initializeValues();
  };

  success_stream = function(remoteStream) {
    $("#text_messages").hide();
    $("#video_container").show();
    return $("#chat_video").attr("src", window.URL.createObjectURL(remoteStream));
  };

  success_relater_stream = function(remoteStream) {
    console.log("success relater stream");
    return $("#chat_video_relater").attr("src", window.URL.createObjectURL(remoteStream));
  };

  window.stopVideoCall = function(event) {
    event.preventDefault();
    if (window.call !== null || window.call !== void 0) {
      window.call.close();
    }
    $("#video_container").hide();
    return $("#text_messages").show();
  };

  window.launchVideoCall = function(event) {
    var relater_peer_js_id;
    event.preventDefault();
    $("#text_messages").hide();
    $("#video_container").show();
    console.log("Trying to launch video");
    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
    relater_peer_js_id = window.peer_js_selected_relater.id + "_peervendor";
    console.log(relater_peer_js_id);
    return navigator.getUserMedia({
      video: true,
      audio: true
    }, function(stream) {
      window.call = window.peer.call(relater_peer_js_id, stream);
      return window.call.on('stream', success_stream);
    }, function(err) {
      return console.log('Failed to get local stream', err);
    });
  };

  window.peerJSInit = function() {
    window.peer_js_id = logged_in_user.id + "_peervendor";
    window.peer = new Peer(window.peer_js_id, {
      key: '2n9conp4vga2a9k9'
    });
    return window.peer.on('call', function(call) {
      console.log("You have a video call");
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
      return navigator.getUserMedia({
        video: true,
        audio: true
      }, function(stream) {
        call.answer(stream);
        return call.on('stream', success_stream);
      }, function(err) {
        return console.log('Failed to get local stream', err);
      });
    });
  };

  show_or_hide_video_stream = function(data) {
    console.log("data");
    console.log(data);
    if (data === null || data === void 0 || data === "no_video_stream") {
      return $("#chat_video_relater").hide();
    } else if (data === "yes_video_stream") {
      return $("#chat_video_relater").show();
    }
  };

  window.dissectRecievedMessage = function(message) {
    var payload, recieved_message;
    recieved_message = message.recieved_message;
    if (window.relater_collection !== null) {
      payload = JSON.parse(recieved_message.payload);
      sender = window.relater_collection.findWhere({
        "id": Number(payload.user_id)
      });
      $("div[data-relater-id='" + sender.id + "']").trigger("click");
      if (payload.is_custom_message === "false") {
        return window.messages.getMessageInfo(Number(payload.message_id), function(payload_message) {
          return window.messages.loadOptionsforMessage(Number(payload.message_id), function(options_for_message) {
            window.openOptionsPopup(options_for_message);
            return window.getTransformedMessage(sender, window.logged_in_user.name, payload_message.transform_pattern, payload.message_id);
          });
        });
      } else {
        return window.getTransformedMessage(sender, window.logged_in_user.name, payload.custom_message, null);
      }
    }
  };

  loadRelaters = function(user_id, call_back) {
    window.relater_collection = new RelaterCollection({
      "user_id": user_id
    });
    return window.relater_collection.fetch({
      success: function() {
        window.loadViews();
        return console.log("relaters retrieved");
      },
      error: function() {
        window.loadViews();
        return console.log("relaters retrieval error");
      }
    });
  };

  sendVideoStreampermission = function(data_to_send) {
    var conn, relater_peer_js_id;
    relater_peer_js_id = "video_call_124";
    conn = window.peer.connect(relater_peer_js_id);
    return conn.on('open', function() {
      return conn.send(relater_peer_js_id);
    });
  };

  window.initialize_extension = function(call_back) {
    $("#option_messages").hide();
    return chrome.storage.local.get(["registered", "registered_user"], function(result) {
      var sign_up_view;
      if (result.registered === void 0 || result.registered_user === void 0) {
        sign_up_view = new SignupView(loadRelaters);
        $("#sign_up_view").html(sign_up_view.render().$el);
        $("#sign_up_view_modal").modal({
          keyboard: false
        });
        return $("#sign_up_view_modal").modal('show');
      } else {
        window.logged_in_user = result.registered_user;
        return loadRelaters(window.logged_in_user.id, call_back);
      }
    });
  };

  window.getTransformedMessage = function(sender, reciever_name, transform_pattern, message_id) {
    var message_transform_helper, transformed_message;
    message_transform_helper = new MessageTransformation();
    message_transform_helper.init(transform_pattern, sender.name, reciever_name);
    if (message_id !== null || message_id !== void 0) {
      message_transform_helper.applyTransformation();
    } else {
      message_transform_helper.pattern = null;
      message_transform_helper.setCustomMessage(transform_pattern);
      message_transform_helper.applyTransformation();
    }
    transformed_message = message_transform_helper.getMessage();
    window.speakMessage(transformed_message);
    return window.putMessageinThread(sender, transformed_message, message_id, true);
  };

  window.initializeValues = function() {
    window.user_to_send = null;
    window.message_to_send = null;
    window.transformed_message = null;
    window.is_custom_message = false;
    window.custom_message = "";
    return window.options_for_message = [];
  };

  window.flipMessageCards = function(show_options_messages) {
    if (show_options_messages) {
      $("#messages").addClass("animated flipOutY");
      $("#option_messages").show();
      return $("#option_messages").removeClass("animated flipOutY");
    } else {
      $("#option_messages").addClass("animated flipOutY");
      $("#messages").show();
      return $("#messages").removeClass("animated flipOutY");
    }
  };

  window.setMessageOptions = function(sender_window, sender) {
    window.broadcast_message = {
      "relater_id": sender.id,
      "relater_to_send": sender.toJSON(),
      "transformed_message": window.transformed_message
    };
    return window.sendBroadcastMessage();
  };

  window.sendMessage = function() {
    var custom_message, data, is_custom_message, message, relater_to_send;
    is_custom_message = !$("#custom_message").prop("disabled");
    custom_message = $("#custom_message").val();
    relater_to_send = window.peer_js_selected_relater;
    message = window.message_to_send;
    data = {
      "sender_id": window.logged_in_user.id,
      "channel_id": relater_to_send.channel_id,
      "is_custom_message": is_custom_message,
      "custom_message": custom_message
    };
    if (!is_custom_message) {
      data["message_id"] = message.get("id");
      console.log(data["message_id"]);
      window.putMessageinThread(relater_to_send, message.user_message, true, message.msg_id);
    } else {
      window.putMessageinThread(relater_to_send, custom_message, false);
      data["message_id"] = " ";
    }
    return $.post(base_url + "/calltheteam/sendmessage", data, function() {
      return console.log("call the team");
    });
  };

  window.putMessageinThread = function(relater, message, message_id, sent_by_relater) {
    var obj, relater_thread_key, thread, thread_params;
    thread_params = {
      relater_id: relater.id,
      transformed_message: message,
      message_id: message_id,
      sent_by_relater: sent_by_relater
    };
    console.log(thread_params);
    thread = new Thread(thread_params);
    relater_thread_key = String("thread_" + String(relater.id));
    obj = {};
    obj[relater_thread_key] = thread;
    return chrome.storage.local.set(obj, function() {
      return console.log("thread message saved");
    });
  };

  window.openOptionsPopup = function(collection) {
    var option_messages, option_messages_collection;
    option_messages_collection = new MessageCollection(collection);
    option_messages = new MessageCollectionView({
      "collection": option_messages_collection
    });
    $("#option_messages").html(option_messages.render().$el);
    return flipMessageCards(true);
  };

  window.loadMessagesofRelater = function(relater_id) {
    var relater_thread_key, thread;
    relater_thread_key = String("thread_" + String(relater_id));
    console.log("relater get key " + relater_thread_key);
    thread = null;
    return chrome.storage.local.get(relater_thread_key, function(result) {
      var thread_message_view;
      thread = result[relater_thread_key];
      if (thread !== null && thread !== void 0) {
        thread_message_view = new ThreadMessageView({
          model: thread
        });
        return $("#thread_messages").html(thread_message_view.render().$el);
      }
    });
  };

  window.addRelaterToCollection = function(relater, call_back) {
    window.relater_collection.add(relater);
    if (call_back !== null && call_back !== void 0) {
      return call_back(relater);
    }
  };

  window.getRelaterThread = function(sender_id) {
    return window.relater_threads[sender_id];
  };

  window.speakMessage = function(transformed_message) {
    return chrome.tts.speak(String(transformed_message));
  };

  document.addEventListener("DOMContentLoaded", initialize_extension);

}).call(this);
