// Generated by CoffeeScript 1.6.1
(function() {
  var dissectRecievedMessage, getTransformedMessage, logged_in_user, notificationandTTS, openOptionsPopupwindow, relater_collections, sendMessage, sender, sender_message;

  window.base_url = "http://localhost:3000";

  window.user_to_send = null;

  window.message_to_send = null;

  relater_collections = null;

  sender = null;

  logged_in_user = null;

  sender_message = null;

  window.messages_with_options = [];

  window.options_for_message = [];

  chrome.browserAction.onClicked.addListener(function(tab) {
    return chrome.windows.create({
      url: '../popup.html',
      type: "popup",
      width: 300,
      height: 600
    }, null);
  });

  sendMessage = function() {
    var data;
    data = {
      "sender": user_to_send.id,
      "channel_id": user_to_send.channel_id,
      "message": message_to_send.user_message
    };
    return $.post(base_url + "/calltheteam/sendmessage", data, null);
  };

  notificationandTTS = function(notification_title, notification_message) {
    var notification;
    notification = webkitNotifications.createNotification(null, notification_title, notification_message);
    return notification.show();
  };

  getTransformedMessage = function(sender_name, reciever_name, transform_pattern) {
    var message_transform_helper;
    message_transform_helper = new MessageTransformation();
    message_transform_helper.init(transform_pattern, sender_name, reciever_name);
    message_transform_helper.applyTransformation();
    return message_transform_helper.getMessage();
  };

  openOptionsPopupwindow = function() {
    return window.options_window_id = chrome.windows.create({
      url: '../options_popup.html',
      type: "popup",
      width: 300,
      height: 600
    }, null);
  };

  dissectRecievedMessage = function(payload) {
    var messages;
    if (relater_collections !== null) {
      sender = relater_collections.findWhere({
        "id": payload.user_id,
        "message_id": payload.message_id
      });
      sender_message = getTransformedMessage(sender.name, logged_in_user.name, payload.transform_pattern);
      messages = new Messages();
      return messages.loadOptionsforMessage(message, openOptionsPopupwindow);
    }
  };

  dissectRecievedMessage({
    "id": 60,
    "message_id": 9
  });

}).call(this);
