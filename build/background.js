// Generated by CoffeeScript 1.6.1
(function() {
  var initialize_extension, loadRelators, messages, notificationandTTS, sender, sender_message;

  window.base_url = "http://localhost:3000";

  window.user_to_send = null;

  window.message_to_send = null;

  window.relater_collection = null;

  sender = null;

  window.logged_in_user = null;

  sender_message = null;

  messages = null;

  window.messages_with_options = [];

  window.options_for_message = [];

  chrome.browserAction.onClicked.addListener(function(tab) {
    return chrome.windows.create({
      url: '../popup.html',
      type: "popup",
      width: 300,
      height: 600
    }, null);
  });

  window.sendMessage = function() {
    var data;
    data = {
      "sender_id": window.user_to_send.id,
      "channel_id": window.user_to_send.channel_id,
      "message_id": window.message_to_send.id
    };
    return $.post(base_url + "/calltheteam/sendmessage", data, null);
  };

  notificationandTTS = function(notification_title, notification_message) {
    var notification;
    notification = webkitNotifications.createNotification(null, notification_title, notification_message);
    return notification.show();
  };

  window.getTransformedMessage = function(sender_name, reciever_name, transform_pattern) {
    var message_transform_helper;
    message_transform_helper = new MessageTransformation();
    message_transform_helper.init(transform_pattern, sender_name, reciever_name);
    message_transform_helper.applyTransformation();
    window.transformed_message = message_transform_helper.getMessage();
    return openOptionsPopupwindow();
  };

  window.openOptionsPopupwindow = function() {
    return window.options_window_id = chrome.windows.create({
      url: '../options_popup.html',
      type: "popup",
      width: 300,
      height: 600
    }, null);
  };

  window.dissectRecievedMessage = function(payload) {
    if (window.relater_collection !== null) {
      sender = window.relater_collection.findWhere({
        "id": payload.user_id
      });
      window.user_to_send = sender;
      window.messages_with_options = new MessageCollection(window.messages_with_options);
      payload.message = window.messages_with_options.findWhere({
        "id": payload.message_id
      });
      messages.loadOptionsforMessage(payload.message_id);
      return sender_message = getTransformedMessage(sender.name, window.logged_in_user.name, payload.message.transform_pattern);
    }
  };

  initialize_extension = function() {
    return chrome.storage.local.get(["registered", "registered_user"], function(result) {
      if (result.registered === void 0 || result.registered_user === void 0) {
        return window.logged_in_user = null;
      } else {
        window.logged_in_user = result.registered_user;
        return loadRelators(window.logged_in_user.id);
      }
    });
  };

  loadRelators = function(user_id) {
    window.relater_collection = new RelaterCollection({
      "user_id": user_id
    });
    return window.relater_collection.fetch({
      success: function() {
        messages = new Messages();
        messages.init();
        return console.log("relaters retrieved");
      },
      error: function() {
        return console.log("relaters retrieval error");
      }
    });
  };

  initialize_extension();

}).call(this);
