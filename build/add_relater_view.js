// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.addRelatersView = (function(_super) {
    var add_new_relater_and_render, callback_check_and_addRelator, check_and_addRelator, openGmailForRequest;

    __extends(addRelatersView, _super);

    function addRelatersView() {
      return addRelatersView.__super__.constructor.apply(this, arguments);
    }

    addRelatersView.prototype.events = {
      "click a#submit_new_contact": "addcontact"
    };

    addRelatersView.prototype.render = function() {
      this.$el.html(HAML["contacts_view"]);
      return this;
    };

    addRelatersView.prototype.addcontact = function(event) {
      var new_contact_email;
      event.preventDefault();
      new_contact_email = $("#new_contact_email").val();
      return check_and_addRelator(new_contact_email);
    };

    check_and_addRelator = function(add_relater) {
      var data, url;
      data = {
        relater_email: add_relater,
        user_id: window.logged_in_user.id
      };
      url = window.base_url + "/calltheteam/addcontact";
      return $.post(url, data, callback_check_and_addRelator);
    };

    callback_check_and_addRelator = function(response_json) {
      var new_relater;
      console.log(response_json.status);
      new_relater = {
        "id": response_json.new_relater.id,
        "name": response_json.new_relater.name,
        "channel_id": response_json.new_relater.channel_id
      };
      switch (response_json.status) {
        case "success":
          return add_new_relater_and_render(new_relater);
        case "user_not_registered":
          return openGmailForRequest($("#new_contact_email").val());
      }
    };

    add_new_relater_and_render = function(relater) {
      var relater_collection_view;
      window.addRelaterToCollection(relater, window.loadRelaters);
      console.log("refreshing views");
      relater_collection_view = new RelatersCollectionView({
        "collection": window.relater_collection
      });
      return $("#relaters_of_the_user").html(relater_collection_view.render().el);
    };

    openGmailForRequest = function(email) {
      var mail_body, mail_subject, mail_to;
      $("#relater_request_join").show();
      mail_to = email;
      mail_subject = "Try this chrome extension . it is really cool";
      mail_body = "Hi ! try this chrome extension , its totally cool to chat inside the office.Try this and add me as your contact.Please dont forget . bye";
      return $("#send_relater_request").click(function(event) {
        var new_tab_options;
        event.preventDefault();
        new_tab_options = {
          "url": "https://mail.google.com/mail/?ui=2&view=cm&fs=1&tf=1&shva=2&to=" + mail_to + "&su=" + mail_subject + "&body=" + mail_body
        };
        return chrome.tabs.create(new_tab_options, function(tab) {
          $("#relater_request_join").hide();
          return $("#new_contact_email").val("");
        });
      });
    };

    return addRelatersView;

  })(Backbone.View);

}).call(this);
